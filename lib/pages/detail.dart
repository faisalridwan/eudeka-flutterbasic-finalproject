import 'package:finaltask_eudeka/models/drink_detail.dart';import 'package:finaltask_eudeka/models/drink_name.dart';import 'package:flutter/cupertino.dart';import 'package:flutter/material.dart';import 'package:cached_network_image/cached_network_image.dart';import 'package:finaltask_eudeka/data/api_provider.dart';import 'package:flutter_spinkit/flutter_spinkit.dart';import 'about.dart';import 'package:flutter_vector_icons/flutter_vector_icons.dart';class DetailDrink extends StatefulWidget {  final Drink drink;  const DetailDrink({Key key, this.drink}) : super(key: key);  @override  _DrinkDetailState createState() => _DrinkDetailState();}class _DrinkDetailState extends State<DetailDrink> {  ApiProvider provider = ApiProvider();  Future<DrinkDetail> drinkDetail;  @override  void initState() {    drinkDetail = provider.getDrinkDetail(widget.drink.idDrink.toString());    super.initState();  }  @override  Widget build(BuildContext context) {    return Scaffold(      appBar: AppBar(        backgroundColor: Colors.white,        leading: IconButton(          icon: Icon(Icons.arrow_back),          color: Colors.black,          onPressed: () {            Navigator.pop(context);          },        ),        actions: <Widget>[          Container(            margin: EdgeInsets.only(right: 15),            child: PopupMenuButton<int>(              onSelected: (value) {                print('ONSELEC = $value');                Navigator.of(context).push(                  MaterialPageRoute(                    builder: (BuildContext context) => About(),                  ),                );              },              child: Icon(                Icons.more_vert,                color: Colors.grey,              ),              itemBuilder: (context) => [                PopupMenuItem(                  value: 1,                  child: Text('About'),                ),              ],            ),          ),        ],      ),      body: FutureBuilder(        future: drinkDetail,        builder: (BuildContext context, AsyncSnapshot snapshot) {          if (snapshot.hasData) {            print('Has data: ${snapshot.hasData}');            DrinkDetail detail = snapshot.data;            return Scrollbar(child: Container(              child: Column(                children: <Widget>[                  Stack(                    children: <Widget>[                      Container(                        margin: EdgeInsets.only(top: 10, left: 10, right: 10),                        child: ClipRRect(                          borderRadius: BorderRadius.only(                            bottomRight: Radius.circular(20),                            bottomLeft: Radius.circular(20),                            topLeft: Radius.circular(20),                            topRight: Radius.circular(20),                          ),                          child: CachedNetworkImage(                            imageUrl: '${detail.drinks[0].strDrinkThumb}',                            imageBuilder: (context, imageProvider) => Container(                              height: 250,                              decoration: BoxDecoration(                                image: DecorationImage(                                  image: imageProvider,                                  fit: BoxFit.cover,                                ),                              ),                            ),                          ),                        ),                      ),                      Container(                        height: 70,                        width: 200,                        margin: EdgeInsets.only(top: 240, right: 100),                        decoration: BoxDecoration(                          color: Colors.red,                          borderRadius: BorderRadius.only(                            bottomRight: Radius.circular(10),                          ),                        ),                        child: Column(                          mainAxisAlignment: MainAxisAlignment.center,                          mainAxisSize: MainAxisSize.max,                          children: <Widget>[                            Container(                                margin: EdgeInsets.only( left: 10, right: 10),                                child: Text(                                  '${detail.drinks[0].strDrink}',                                  style: TextStyle(                                      color: Colors.white,                                      fontWeight: FontWeight.bold, fontSize: 20),                                )),                          ],                        ),                      ),                    ],                  ),                  Container(                    margin: EdgeInsets.only(top: 20, bottom: 5, left: 30),                    child: Row(                      children: <Widget>[                        Container( margin: EdgeInsets.only(right: 5),child: Icon(Feather.tag, size: 20,)),                        Container(                          child: Text('Category : ', style: TextStyle(fontWeight: FontWeight.bold),),                        ),                        Text('${detail.drinks[0].strCategory}')                      ],                    ),                  ),                  Padding(                    padding: const EdgeInsets.only(left: 20, right: 20),                    child: Divider(),                  ),                  Container(                    margin: EdgeInsets.only(top: 20),                    child: Text('Instructions :', style: TextStyle(fontWeight: FontWeight.bold),),                  ),                  Container(                    margin: EdgeInsets.all(20),                    child: Text('${detail.drinks[0].strInstructions}'),                  ),                  Padding(                    padding: const EdgeInsets.only(left: 20, right: 20),                    child: Divider(),                  ),                ],              ),            ));          } else if (snapshot.hasError) {            print('Has data: ${snapshot.hasError}');            return Text('Error!!!');          } else {            print('Lagi loading....');            return Center(child: SpinKitChasingDots(color: Colors.red));          }        },      ),    );  }}